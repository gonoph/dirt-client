/gag        Prevent lines of mud output from being printed                [Perl]

Syntax:
    /gag [-aD] [-n <shots>] [-g <group>] -t <regex> <name>
    /gag -d <name>
    /gag -l

Options:
    -t      The string to gag, argument is the regular expression to match.
    -a      Match against the COLORED ((A)NSI) string instead of the uncolored
            string.  You may include variables like ${red} in the matching 
            string.
    -D      Creat gag disabled.  They are enabled when created by default.
    -n      Execute this hook <shots> times.  If <shots> is 0, the hook will
            never be executed (but it will be defined).  If it is negative,
            the hook will execute forever.                         (default: -1)
    -g      Group name with which this hook should be associated.  Multiple
            groups may be specified by separating them with commas.
    -l      List defined gags.
    -d      Delete a defined gag.

Notes:
    The /gag command uses the hook system to gag lines.  If you need to do
    something more complicated, you can use the gagit function to actually gag
    lines for you like this:
        /hook -t'^Whosiewhatsit' -c 0.5 -fL perl gagwhosiewhatsit = Gag::gagit
    This creates a 50% chance gag.  The perl function Gag::gagit actually
    deletes the output line.  Hooks of lower priority will not see the output!
    
Examples:
    /gag -t '^You feel hungry.' hungry

See Also: /hook, /enable, /disable
