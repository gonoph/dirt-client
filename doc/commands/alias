/alias      Manipulate user defined commands                              [Perl]

Syntax:
    /alias [-FDf] [-p <priority>] [-g <group>] [-L <language>] <name> = <action>
    /trig -d <name>
    /trig -l

Options:
    -F      Fallthrough to allow hooks of lower priority to be executed.
                                                      (default: NOT fallthrough)
    -D      Create alias disabled.  They are enabled when created by default.
    -f      <value> is a function name to execute instead of a dirt command.
    -p      Priority of this alias.                                 (default: 0)
    -g      Group name with which this alias should be associated.  Multiple
            groups may be specified by separating them with commas.
    -L      The argument <language> is the name of the language in which the 
            function to be run (-f) is defined.  If -L is specified, -f is 
            assumed.
    -l      List defined aliases.
    -d      Delete a defined aliases.

Notes:
    /alias allows you to define hooks that are persistent.  Persistent means
    that they will be saved when you exit dirt, and reinstalled when you start
    dirt again.  It is intended for relatively simple aliases that you create
    by typing them in at the command line.  More complex scripts should use
    /hook, and handle installing themselves at startup.

    Aliases use the hook mechanism.  Therefore they will show up when you list
    hooks (/hook -l), and interact with other hooks predictably (because they 
    *are* hooks).  For instance, if your alias is high priority (-p <large>) 
    and not fallthrough (-F), if will prevent other hooks from being executed
    that might be triggered by the same typed command.

    Aliases are always SEND type hooks, and the name of the alias is the same
    as the command you type.  (i.e. '-C <name>' is passed to /hook)

    The -l option will only list aliases defined with /alias.  It will not
    list other SEND-type hooks.

Examples:
    

See Also: /hook
