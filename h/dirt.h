#ifndef DIRT_DIRT_H
#define DIRT_DIRT_H

// My config files generated by autoconf
#include <defs.h>
#include <config.h>

// C++ includes
#include <string>
#if HAVE_HASH_MAP && !HAVE_EXT_HASH_MAP
#include <hash_map>
#else
#include <ext/hash_map>
#endif

using namespace std;
#if __GNUC__ == 3 && __GNUC_MINOR__ >= 1
using namespace __gnu_cxx;
#endif

// Define to 1) print all allocs to stderr
// 2) put a magic marker before and after all memory allocated
// #define MEMORY_DEBUG
#ifdef MEMORY_DEBUG
void * operator new (size_t size);
void operator delete (void *ptr);
#endif


//#if !HAVE_HASH_STRING && HAVE_HASH_MAP  // gcc 3.X has hash<string>, 2.9.X does not
// This is not provided by g++ (2.9.X) ... it should be.
#if __GNUC__ == 3 && __GNUC_MINOR__ >= 1
namespace __gnu_cxx {
#else
namespace std {
#endif
template <>     // create a hashing algorithm for string that uses the const char* hashing algo.
struct hash<string>
{
    size_t operator()(string const &str) const {
        return __stl_hash_string(str.c_str());
    }
};
}

#endif
